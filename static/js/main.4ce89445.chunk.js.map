{"version":3,"sources":["index.js"],"names":["Legend","style","color","React","Component","ProductCategoryRow","colSpan","this","props","category","ProductRow","name","product","stocked","price","ProductTable","filterText","inStockOnly","rows","lastCategory","products","forEach","toLowerCase","indexOf","push","console","log","SearchBar","handleFilterTextChange","bind","handleInStockChange","e","onFilterTextChange","target","value","onInStockChange","checked","type","placeholder","onChange","Table","state","setState","className","PRODUCTS","api","ReactDOM","render","document","getElementById"],"mappings":"+MAKMA,E,4JACF,WACI,OACI,kCAAO,uBACH,8BACI,sBAAMC,MAAO,CAAEC,MAAO,OAAtB,iBADJ,+B,GAJKC,IAAMC,WAYrBC,E,4JACF,WACI,OACI,6BACI,oBAAIC,QAAQ,IAAZ,SACKC,KAAKC,MAAMC,iB,GALCN,IAAMC,WAYjCM,E,4JACF,WACI,IAAMC,EAAOJ,KAAKC,MAAMI,QAAQC,QAAUN,KAAKC,MAAMI,QAAQD,KAAO,sBAAMV,MAAO,CAAEC,MAAO,OAAtB,SAAgCK,KAAKC,MAAMI,QAAQD,OACjHG,EAAQP,KAAKC,MAAMI,QAAQE,MACjC,OACI,+BACI,6BAAKH,IACL,6BAAKG,W,GAPIX,IAAMC,WAazBW,E,4JACF,WACI,IAAMC,EAAaT,KAAKC,MAAMQ,WACxBC,EAAcV,KAAKC,MAAMS,YAEzBC,EAAO,GACTC,EAAe,KA4BnB,OA1BAZ,KAAKC,MAAMY,SAASC,SAAQ,SAAAT,IAE8C,IAAlEA,EAAQD,KAAKW,cAAcC,QAAQP,EAAWM,iBAI9CL,IAAgBL,EAAQC,UAIxBD,EAAQH,WAAaU,GACrBD,EAAKM,KACD,cAACnB,EAAD,CACII,SAAUG,EAAQH,UACbG,EAAQH,WAGzBgB,QAAQC,MAERR,EAAKM,KACD,cAACd,EAAD,CACIE,QAASA,GACJA,EAAQD,OAErBQ,EAAeP,EAAQH,cAGvB,8BACI,kCACI,gCACI,+BACI,sCACA,4CAGR,gCACKS,a,GA5CEf,IAAMC,WAoD3BuB,E,kDACF,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IACDoB,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAHZ,E,0DAMnB,SAAuBE,GACnBxB,KAAKC,MAAMwB,mBAAmBD,EAAEE,OAAOC,S,iCAG3C,SAAoBH,GAChBxB,KAAKC,MAAM2B,gBAAgBJ,EAAEE,OAAOG,W,oBAGxC,WACI,OACI,iCACI,uBACIC,KAAK,OACLC,YAAY,SACZJ,MAAO3B,KAAKC,MAAMQ,WAClBuB,SAAUhC,KAAKqB,yBACnB,8BACI,uBACIS,KAAK,WACLD,QAAS7B,KAAKC,MAAMS,YACpBsB,SAAUhC,KAAKuB,sBAClB,IALL,wC,GAvBQ3B,IAAMC,WAoCxBoC,E,kDACF,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IACDiC,MAAQ,CACTzB,WAAY,GACZC,aAAa,GAEjB,EAAKW,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAPZ,E,0DAUnB,SAAuBb,GACnBT,KAAKmC,SAAS,CACV1B,WAAYA,M,iCAIpB,SAAoBC,GAChBV,KAAKmC,SAAS,CACVzB,YAAaA,M,oBAIrB,WACI,OACI,gCACI,sBAAK0B,UAAU,QAAf,UACI,kDAAoB,sBAAM1C,MAAO,CAAEC,MAAO,WAAtB,sBACpB,cAACyB,EAAD,CACIX,WAAYT,KAAKkC,MAAMzB,WACvBC,YAAaV,KAAKkC,MAAMxB,YACxBe,mBAAoBzB,KAAKqB,uBACzBO,gBAAiB5B,KAAKuB,sBAE1B,cAACf,EAAD,CACIK,SAAUb,KAAKC,MAAMY,SACrBJ,WAAYT,KAAKkC,MAAMzB,WACvBC,YAAaV,KAAKkC,MAAMxB,iBAGhC,8BACI,cAACjB,EAAD,a,GAzCAG,IAAMC,WAkDpBwC,EAAWC,EAEjBC,IAASC,OACL,cAACP,EAAD,CAAOpB,SAAUwB,IACjBI,SAASC,eAAe,U","file":"static/js/main.4ce89445.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport api from \"./components/api.json\";\n\nclass Legend extends React.Component {\n    render() {\n        return (\n            <small><br />\n                <i>\n                    <span style={{ color: 'Red' }}>Red</span> mean out of stock\n                </i>\n            </small>\n        )\n    }\n}\n\nclass ProductCategoryRow extends React.Component {\n    render() {\n        return (\n            <tr>\n                <th colSpan=\"2\">\n                    {this.props.category}\n                </th>\n            </tr>\n        )\n    }\n}\n\nclass ProductRow extends React.Component {\n    render() {\n        const name = this.props.product.stocked ? this.props.product.name : <span style={{ color: 'red' }}>{this.props.product.name}</span>\n        const price = this.props.product.price\n        return (\n            <tr>\n                <td>{name}</td>\n                <td>{price}</td>\n            </tr>\n        )\n    }\n}\n\nclass ProductTable extends React.Component {\n    render() {\n        const filterText = this.props.filterText\n        const inStockOnly = this.props.inStockOnly\n\n        const rows = []\n        let lastCategory = null\n\n        this.props.products.forEach(product => {\n\n            if (product.name.toLowerCase().indexOf(filterText.toLowerCase()) === -1) {\n                return\n            }\n\n            if (inStockOnly && !product.stocked) {\n                return\n            }\n\n            if (product.category !== lastCategory) {\n                rows.push(\n                    <ProductCategoryRow\n                        category={product.category}\n                        key={product.category} />\n                );\n            }\n            console.log()\n\n            rows.push(\n                <ProductRow\n                    product={product}\n                    key={product.name} />\n            )\n            lastCategory = product.category\n        })\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Price</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\n        this.handleInStockChange = this.handleInStockChange.bind(this)\n    }\n\n    handleFilterTextChange(e) {\n        this.props.onFilterTextChange(e.target.value)\n    }\n\n    handleInStockChange(e) {\n        this.props.onInStockChange(e.target.checked)\n    }\n\n    render() {\n        return (\n            <form>\n                <input\n                    type=\"text\"\n                    placeholder=\"search\"\n                    value={this.props.filterText}\n                    onChange={this.handleFilterTextChange} />\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={this.props.inStockOnly}\n                        onChange={this.handleInStockChange} />\n                    {\" \"}\n                         Only show products in stock\n                    </p>\n            </form>\n        )\n    }\n}\n\nclass Table extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            filterText: \"\",\n            inStockOnly: false\n        }\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\n        this.handleInStockChange = this.handleInStockChange.bind(this)\n    }\n\n    handleFilterTextChange(filterText) {\n        this.setState({\n            filterText: filterText\n        })\n    }\n\n    handleInStockChange(inStockOnly) {\n        this.setState({\n            inStockOnly: inStockOnly\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"table\">\n                    <h2>Data fetch with <span style={{ color: '#61DAFB' }}>React</span></h2>\n                    <SearchBar\n                        filterText={this.state.filterText}\n                        inStockOnly={this.state.inStockOnly}\n                        onFilterTextChange={this.handleFilterTextChange}\n                        onInStockChange={this.handleInStockChange}\n                    />\n                    <ProductTable\n                        products={this.props.products}\n                        filterText={this.state.filterText}\n                        inStockOnly={this.state.inStockOnly}\n                    />\n                </div>\n                <div>\n                    <Legend/>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n\nconst PRODUCTS = api;\n\nReactDOM.render(\n    <Table products={PRODUCTS} />,\n    document.getElementById('root')\n);"],"sourceRoot":""}